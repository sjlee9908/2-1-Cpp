1. (1) Rect *p;
1. (2) p=&r;
1. (3) cout << p->getWidth() << endl <<  p->getHeight() 
2. (1) q= new Rect(x,h);
2. (2) cout << q->getArea();
2. (3) delete q
3. 1
4. 매개변수가 없는 기본생성자 추가
5. 
int sum = 0;
for (int =0; i<5; i++){
	sum+=r[0].getArea();
}
cout << sum;
6. 4
7. 4
8. 기본생성자
기본생성자
기본생성자
소멸자
소멸자
소멸자
9. 1
10. delete --> delete[]
11. 3
12. 3
13. 
class Location{
	int width, height;
public:
	Location(){this->width = this->height = 0;}
	Location(int w, int h){
		this->width =w;
		this->height = h;
	}
	void show();
};
void Location::show(){
	cout<<this->width<<this->height<<endl;
}
14. 동적할당한 메모리를 힙으로 반환하지 않을 때
15. (1)
void f(){
	char *p = new char [10];
	strcpy(p, "abc");
	delete[] p;
}
15. (2) 메모리 누수 발생 X
15. (3) 메모리 누수 발생 X
15. (4) 
void f(){
	int *p;
	for(int i=0; i<5; i++){
		p=new int;
		cin >> *p;
		if(*p%2 == 1){
			delete p;
			break;
		}
	}
	delete p;
}
16. 1
17. stoi
18. 3
19. 
string a("My name is Jane");
char ch = a[2];
if(a=="My name is John") cout << "same";
a+="~~";
a[1]="Y";